name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: linux
            ext: tar.gz
          - target: x86_64-pc-windows-gnu
            os: windows
            ext: zip
          - target: aarch64-apple-darwin
            os: macos
            ext: tar.gz
          - target: x86_64-apple-darwin
            os: macos
            ext: tar.gz

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build binary
        run: cargo build --release --target=${{ matrix.target }}

      - name: Prepare artifact
        run: |
          mkdir -p dist
          BIN_NAME="resonate_oxide"
          TARGET_DIR="target/${{ matrix.target }}/release"
          OUT_NAME="resonate_oxide-${{ matrix.os }}-${{ matrix.target }}"
          
          # Add .exe extension for Windows
          if [ "${{ matrix.os }}" = "windows" ]; then
            cp "$TARGET_DIR/$BIN_NAME.exe" "./dist/$BIN_NAME.exe"
            zip "dist/$OUT_NAME.zip" "dist/$BIN_NAME.exe"
          else
            cp "$TARGET_DIR/$BIN_NAME" "./dist/$BIN_NAME"
            tar -czf "dist/$OUT_NAME.tar.gz" -C dist "$BIN_NAME"
          fi

      - name: Upload release artifact
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.tar.gz
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
